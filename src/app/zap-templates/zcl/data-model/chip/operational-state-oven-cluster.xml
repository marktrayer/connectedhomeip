<?xml version="1.0"?>
<!--
Copyright (c) 2023-2024 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!--
XML generated by Alchemy; DO NOT EDIT.
Source: src\app_clusters\OperationalState_Oven.adoc
Parameters:
Git: 1.4-445-g890b6e205
-->
<configurator xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../zcl.xsd">
  <domain name="CHIP"/>
  <cluster>
    <domain>Appliances</domain>
    <name>Oven Cavity Operational State</name>
    <code>0x0048</code>
    <define>OPERATIONAL_STATE_OVEN_CLUSTER</define>
    <client init="false" tick="false">true</client>
    <server init="false" tick="false">true</server>
    <description>This cluster supports remotely monitoring and, where supported, changing the operational state of an Oven.</description>
    <globalAttribute side="either" code="0xFFFD" value="2"/>
    <attribute side="server" code="0x0000" name="PhaseList" define="PHASE_LIST" type="array" entryType="char_string" isNullable="true" length="32">PhaseList</attribute>
    <attribute side="server" code="0x0001" name="CurrentPhase" define="CURRENT_PHASE" type="int8u" isNullable="true">CurrentPhase</attribute>
    <attribute side="server" code="0x0002" name="CountdownTime" define="COUNTDOWN_TIME" type="elapsed_s" max="259200" isNullable="true" optional="true">
      <description>CountdownTime</description>
      <optionalConform/>
    </attribute>
    <attribute side="server" code="0x0003" name="OperationalStateList" define="OPERATIONAL_STATE_LIST" type="array" entryType="OperationalStateStruct">OperationalStateList</attribute>
    <attribute side="server" code="0x0004" name="OperationalState" define="OPERATIONAL_STATE" type="OperationalStateEnum" min="0x00" max="0x03">OperationalState</attribute>
    <attribute side="server" code="0x0005" name="OperationalError" define="OPERATIONAL_ERROR" type="ErrorStateStruct">OperationalError</attribute>
    <command source="client" code="0x01" name="Stop" response="OperationalCommandResponse" optional="true">
      <description>This command SHALL be supported if the device supports remotely stopping the operation.</description>
      <otherwiseConform>
        <mandatoryConform>
          <command name="Start"/>
        </mandatoryConform>
        <optionalConform/>
      </otherwiseConform>
    </command>

    <command source="client" code="0x02" name="Start" response="OperationalCommandResponse" optional="true">
      <description>This command SHALL be supported if the device supports remotely starting the operation.</description>
      <optionalConform/>
    </command>

    <command source="server" code="0x04" name="OperationalCommandResponse" optional="true" disableDefaultResponse="true">
      <description>This command SHALL be supported by an implementation if any of the other commands defined by this cluster are supported (i.e. listed in the AcceptedCommandList global attribute).</description>
      <arg id="0" name="CommandResponseState" type="ErrorStateStruct"/>
      <mandatoryConform>
        <orTerm>
          <command name="Pause"/>
          <command name="Stop"/>
          <command name="Start"/>
        </orTerm>
      </mandatoryConform>
    </command>

    <event side="server" code="0x00" priority="critical" name="OperationalError">
      <description>This event is generated when a reportable error condition is detected.</description>
      <field id="0" name="ErrorState" type="ErrorStateStruct"/>
    </event>

    <event side="server" code="0x01" priority="info" name="OperationCompletion" optional="true">
      <description>This event SHOULD be generated when the overall operation ends, successfully or otherwise.</description>
      <field id="0" name="CompletionErrorCode" type="enum8"/>
      <field id="1" name="TotalOperationalTime" type="elapsed_s" isNullable="true" optional="true"/>
      <field id="2" name="PausedTime" type="elapsed_s" isNullable="true" optional="true"/>
      <optionalConform/>
    </event>

  </cluster>
</configurator>
